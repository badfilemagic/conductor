{"name":"Conductor","tagline":"A framework for testing distributed systems","body":"# Conductor\r\n\r\n## A system for testing distributed systems across a network\r\n\r\nMany test frameworks exist to test code on a single host or, across a\r\nnetwork, on a single server.  Conductor is a distributed system test\r\nframework, written in Python, that can be used to coordinate a set of\r\ntests among a set of clients.  The Conductor system allows a single\r\nmachine to control several systems, orchestrating tests that require\r\nthe cooperation of several networked devices.\r\n\r\nA common use for Conductor is to test a network devices, such as a\r\nrouter or firewall, that is connected to multiple senders and\r\nreceivers.  Each of the senders, receivers, and the device under test\r\n(DUT) are a Player, and another system is designated as the Conductor.\r\n\r\nThe players, read commands over a network channel, execute them and\r\nreturn results to the conductor.\r\n\r\nThe conductor reads test descriptions from a configuration file,\r\nwritten using Python's config parser, and executes the tests on the\r\nplayers.\r\n\r\nThe tests are executed in Phases.  A Phase contains a set of internal\r\nor external (shell/program) commands that are executed in order, per\r\nclient.  The four Phases currently defined are:\r\n\r\n* Startup\r\n\r\nThe startup phase is where commands that are required to set up each\r\ndevice are execute.  Examples include setting up network interfaces,\r\nrouting tables, as well as creating directories to hold result files\r\non the players.\r\n\r\n* Run\r\n\r\nThe Run phase contains the commands that are the core of the test.  An\r\nexample might be starting a number of transmitting and receiving\r\nprograms to generate and sink traffic through the DUT.\r\n\r\n* Collect\r\n\r\nIn the Collect phase the Conductor sends commands to the Players to\r\nretrieve any data that was generated during the test, and places that\r\ndata into a results directory on the Conductor, for later analysis.\r\n\r\n* Reset\r\n\r\nThe last phase is the Reset phase, where the Conductor instructs the\r\nPlayers to reset any configuration that might have been set in the\r\nStartup phase and which might influence later test runs.  It is the\r\ngoal when writing Conductor tests that all the systems used in the\r\ntest return to the state they were in prior to the Startup phase.\r\n\r\nEach Phase has three parts.  The Conductor first downloads the Phase to\r\nthe Player, but does not tell it to execute.  Downloading the Phase to\r\neach client allows the Conductor to start each Phase nearly\r\nsimultaneously, although the fact that the Conductor itself serializes\r\nits communication among the clients means that there is a small amount\r\nof skew in when each Player is told to execute its steps.  \r\n\r\n\r\n_**This work supported by: Rubicon Communications, LLC (Netgate)**_\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}